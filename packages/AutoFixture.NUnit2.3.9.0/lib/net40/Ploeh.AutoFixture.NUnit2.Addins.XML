<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ploeh.AutoFixture.NUnit2.Addins</name>
    </assembly>
    <members>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.Addin">
            <summary>
            The Addin class holds information about an addin.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.Addin.Install(NUnit.Core.Extensibility.IExtensionHost)">
            <summary>
            When called, the add-in installs itself into
            the host, if possible. Because NUnit uses separate
            hosts for the client and test domain environments,
            an add-in may be invited to istall itself more than
            once. The add-in is responsible for checking which
            extension points are supported by the host that is
            passed to it and taking the appropriate action.
            </summary>
            <param name="host">The host in which to install the add-in</param>
            <returns>True if the add-in was installed, otehrwise false</returns>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.Builders.AutoDataProvider">
            <summary>
            AutoTestCaseProvider provides data for methods
            annotated with the AutoTestCaseAttribute.
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.Builders.AutoDataProvider.HasTestCasesFor(System.Reflection.MethodInfo)">
            <summary>
            Determine whether any test cases are available for a parameterized method.
            </summary>
            <param name="method">A MethodInfo representing a parameterized test</param>
            <returns>True if any cases are available, otherwise false.</returns>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.Builders.AutoDataProvider.GetTestCasesFor(System.Reflection.MethodInfo)">
            <summary>
            Return an IEnumerable providing test cases for use in
            running a parameterized test.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.Builders.AutoDataProvider.HasTestCasesFor(System.Reflection.MethodInfo,NUnit.Core.Test)">
            <summary>
            Determine whether any test cases are available for a parameterized method.
            </summary>
            <param name="method">A MethodInfo representing a parameterized test</param>
            <param name="suite">A Suite representing a NUnit TestSuite</param>
            <returns>True if any cases are available, otherwise false.</returns>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.Builders.AutoDataProvider.GetTestCasesFor(System.Reflection.MethodInfo,NUnit.Core.Test)">
            <summary>
            Return an IEnumerable providing test cases for use in
            running a parameterized test.
            </summary>
            <param name="method"></param>
            <param name="parentSuite"></param>
            <returns></returns>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.Constants">
            <summary>
            Class to contains all static string constants
            </summary>
        </member>
        <member name="F:Ploeh.AutoFixture.NUnit2.Addins.Constants.AutoDataExtension">
            <summary>
            The name by which the AutoFixture NUnit2 extension is identified.
            </summary>
        </member>
        <member name="F:Ploeh.AutoFixture.NUnit2.Addins.Constants.AutoDataAttribute">
            <summary>
            The name by which the AutoFixture NUnit2 AutoDataAttribute is identified by.
            </summary>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.DataAttribute">
            <summary>
            Abstract attribute which represents a testcase provider for a testcase.
                        TestCase providers derive from this attribute and implement GetArguments
                        to return the arguments for the testcase.
            
            </summary>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.DataAttribute.GetData(System.Reflection.MethodInfo)">
            <summary>
            Returns the composition of arguments to be used to test the testcase. Favors the arguments returned
            by TestCaseDataAttributes in ascending order.
            </summary>
            <param name="method">The method that is being tested.</param>
            <returns>
            Returns the composition of the testcase arguments.
            </returns>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper">
            <summary>
            The EventListenerWrapper is used wrap any existing eventlistner and relay the events.
            </summary>
            <remarks>
            This is needed because of a resharper bug where it doesn't pick up NUnitAddin's
            http://youtrack.jetbrains.com/issue/RSRP-205480
            </remarks>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.#ctor(NUnit.Core.EventListener)">
            <summary>
            
            </summary>
            <param name="eventListener"></param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.RunStarted(System.String,System.Int32)">
            <summary>
            Called when a test run is starting
            </summary>
            <param name="name">The name of the test being started</param>
            <param name="testCount">The number of test cases under this test</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.RunFinished(NUnit.Core.TestResult)">
            <summary>
            Called when a run finishes normally
            </summary>
            <param name="result">The result of the test</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.RunFinished(System.Exception)">
            <summary>
            Called when a run is terminated due to an exception
            </summary>
            <param name="exception">Exception that was thrown</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.TestStarted(NUnit.Core.TestName)">
            <summary>
            Called when a test case is starting
            </summary>
            <param name="testName">The name of the test case</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.TestFinished(NUnit.Core.TestResult)">
            <summary>
            Called when a test case has finished
            </summary>
            <param name="result">The result of the test</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.SuiteStarted(NUnit.Core.TestName)">
            <summary>
            Called when a suite is starting
            </summary>
            <param name="testName">The name of the suite</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.SuiteFinished(NUnit.Core.TestResult)">
            <summary>
            Called when a suite has finished
            </summary>
            <param name="result">The result of the suite</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.UnhandledException(System.Exception)">
            <summary>
            Called when an unhandled exception is detected during
            the execution of a test run.
            </summary>
            <param name="exception">The exception thta was detected</param>
        </member>
        <member name="M:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.EventListenerWrapper.TestOutput(NUnit.Core.TestOutput)">
            <summary>
            Called when the test direts output to the console.
            </summary>
            <param name="testOutput">A console message</param>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.TestDecorator">
            <summary>
            TestDecorator is used to add functionality to
            another Test, which it aggregates.
            </summary>
        </member>
        <member name="T:Ploeh.AutoFixture.NUnit2.Addins.ReSharper.TestMethodWrapper">
            <summary>
            This class wires the EventListenerWrapper around the existing EventListner
            </summary>
        </member>
    </members>
</doc>
